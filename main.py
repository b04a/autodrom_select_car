import asyncio
import subprocess
from aiogram import Bot, Dispatcher, F
from aiogram.filters import Command
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.storage.memory import MemoryStorage


# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
API_TOKEN = 'XXXX'

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher(storage=MemoryStorage())


# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π
class SearchCarState(StatesGroup):
    waiting_for_price_range = State()


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏
main_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üöó –ù–∞–π—Ç–∏ –º–∞—à–∏–Ω—É")],
    ],
    resize_keyboard=True
)


# –•—ç–Ω–¥–ª–µ—Ä –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command("start"))
async def start_command(message: Message):
    await bot.send_photo(
        chat_id=message.chat.id,
        photo="https://mir-s3-cdn-cf.behance.net/project_modules/1400_opt_1/b2b63a69331555.5b7d61c8a04d5.jpg",
        # –°—Å—ã–ª–∫–∞ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–ª–∏ —Ñ–∞–π–ª
        caption="–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –º–∞—à–∏–Ω –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–µ—Ä–≤–∏—Å–∞ drom.ru! –û—Ç–∫—Ä—ã–≤–∞–π –º–µ–Ω—é!",
        reply_markup=main_keyboard
    )


# –•—ç–Ω–¥–ª–µ—Ä –∫–Ω–æ–ø–∫–∏ "üöó –ù–∞–π—Ç–∏ –º–∞—à–∏–Ω—É"
@dp.message(F.text == "üöó –ù–∞–π—Ç–∏ –º–∞—à–∏–Ω—É")
async def find_car_command(message: Message, state: FSMContext):
    await message.answer("""
        –í –∫–∞–∫–æ–º —Ü–µ–Ω–æ–≤–æ–º –¥–∏–∞–ø–æ–∑–æ–Ω–µ –∏—â–µ–º?
        –ù–∞–ø–∏—à–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—É –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é
        –í —Ñ–æ—Ä–º–∞—Ç–µ: 100000 200000
    """)
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –¥–∏–∞–ø–∞–∑–æ–Ω–∞ —Ü–µ–Ω
    await state.set_state(SearchCarState.waiting_for_price_range)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ —Ü–µ–Ω
@dp.message(SearchCarState.waiting_for_price_range)
async def process_price_range(message: Message, state: FSMContext):
    try:
        # –ü–∞—Ä—Å–∏–º –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        min_price, max_price = map(int, message.text.split())

        # –í—ã–≤–æ–¥ –≤ —á–∞—Ç
        await message.answer(f"–ò—â–µ–º –º–∞—à–∏–Ω—ã –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç {min_price} –¥–æ {max_price} —Ä—É–±–ª–µ–π.")

        # –ó–∞–ø—É—Å–∫ Playwright —Å–∫—Ä–∏–ø—Ç–∞
        subprocess.Popen(["python", "method2.py", str(min_price), str(max_price)])

        # –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await state.clear()
    except ValueError:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ: 100000 200000")


# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
